// src/components/FormInputSection.tsx (‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏° State Lifting ‡πÅ‡∏•‡∏∞ Layout ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)

// --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 0: Imports ---
import React, { useMemo } from "react"; // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ useState, useEffect ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
import InputFieldGroup from "./InputFieldGroup";       // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö path
import RppRtuRatioSlider from "./RppRtuRatioSlider";   // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö path
import { calculateLifeCoverage } from "../lib/calculations"; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö path ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£ import
//import { Button } from "@/components/ui/button";        // Import Shadcn Button
import { FaBirthdayCake, FaVenusMars } from 'react-icons/fa'; // Import Icons
import { useAppOutletContext } from "../App"; // Import Context Hook (‡∏õ‡∏£‡∏±‡∏ö path ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
// --- ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 0 ---


export default function FormInputSection() {
  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏î‡∏∂‡∏á State ‡πÅ‡∏•‡∏∞ Setters ‡∏°‡∏≤‡∏à‡∏≤‡∏Å Context ---
  // ‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡∏à‡∏≤‡∏Å App.tsx
  const {
    age, setAge,
    gender, setGender,
    paymentFrequency, setPaymentFrequency,
    rpp, setRpp,
    rtu, setRtu,
    sumInsured, setSumInsured,
    reductionHistory, // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏ó‡∏∏‡∏ô
    handlePercentChange, // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Slider
   // handleCalculate
  } = useAppOutletContext();
  // --- ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1 ---


  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: Effects ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ App.tsx ‡πÅ‡∏•‡πâ‡∏ß ---
  // ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ useEffect ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° RPP <-> Sum Insured ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà


  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: Derived Values (‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å State ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Context) ---
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
  const lifeCoverage = useMemo(() => {
    return calculateLifeCoverage(sumInsured); // ‡πÉ‡∏ä‡πâ sumInsured ‡∏à‡∏≤‡∏Å Context
  }, [sumInsured]);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏ß‡∏°
  const totalPremium = useMemo(() => {
    return (rpp || 0) + (rtu || 0);
  }, [rpp, rtu]);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì RTU ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
  const maxRtu = useMemo(() => {
    return (rpp || 0) * 3;
  }, [rpp]);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì % RPP ‡πÅ‡∏•‡∏∞ Total ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Slider
   const totalPremiumForSlider = useMemo(() => (rpp || 0) + (rtu || 0), [rpp, rtu]);
   const rppPercentForSlider = useMemo(() => {
       return totalPremiumForSlider > 0 ? Math.round((rpp / totalPremiumForSlider) * 100) : 100;
   }, [rpp, totalPremiumForSlider]);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏î‡∏ó‡∏∏‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å Array (‡πÉ‡∏ä‡πâ useMemo)
   const latestReduction = useMemo(() => {
    // 1. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ return null
    if (!reductionHistory || reductionHistory.length === 0) {
      return null;
    }
    // 2. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏°‡∏≤
    // (‡πÄ‡∏£‡∏≤‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤ App.tsx sort ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ñ‡∏∑‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
    return reductionHistory[reductionHistory.length - 1];
 }, [reductionHistory]); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ reductionHistory ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  // --- ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3 ---


  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 4: Handlers (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Component ‡∏ô‡∏µ‡πâ) ---
  // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdown ‡∏≠‡∏≤‡∏¢‡∏∏
  const handleAgeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setAge(parseInt(event.target.value, 10)); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Setter ‡∏à‡∏≤‡∏Å Context
  };
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Options ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdown ‡∏≠‡∏≤‡∏¢‡∏∏
  const ageOptions = Array.from({ length: 80 - 1 + 1 }, (_, i) => 1 + i); // ‡∏≠‡∏≤‡∏¢‡∏∏ 1-80

  // --- ‡∏•‡∏ö handler ‡∏ó‡∏µ‡πà‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ App.tsx ‡∏≠‡∏≠‡∏Å ---
  // --- ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 4 ---


  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5: JSX ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• UI (‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö Layout) ---
  return (
    // Container ‡∏´‡∏•‡∏±‡∏Å: ‡πÉ‡∏ä‡πâ Padding ‡πÅ‡∏•‡∏∞ Space ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
    <div className="p-4 md:p-6 space-y-4 md:space-y-6 bg-white rounded-lg shadow-sm border border-gray-200">

      {/* === ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.1: ‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô === */}
      {/* ‡πÉ‡∏ä‡πâ Grid, ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå/Gap/Alignment */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 items-start">

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1: ‡∏≠‡∏≤‡∏¢‡∏∏ + ‡πÄ‡∏û‡∏® */}
        <div className="flex flex-wrap items-start gap-x-4 gap-y-2">
            {/* ‡∏≠‡∏≤‡∏¢‡∏∏ */}
            <div className="min-w-[90px] w-24"> {/* ‡∏õ‡∏£‡∏±‡∏ö width */}
              <div className="flex items-center gap-1.5 mb-1">
                <FaBirthdayCake className="text-blue-700 text-sm flex-shrink-0"/>
                <label htmlFor="age-select" className="text-xs font-medium text-gray-700">‡∏≠‡∏≤‡∏¢‡∏∏</label>
              </div>
              <select
                id="age-select"
                value={age}
                onChange={handleAgeChange}
                className="w-12 h-8 border-b-2 border-gray-600 px-2 py-1 
                text-sm text-blue-600 font-semibold bg-white 
                focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-50
                appearance-none /* üëà 1. ‡∏•‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á OS ‡∏≠‡∏≠‡∏Å */
                rounded-none    /* üëà 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ß‡∏£‡πå) */

                /* 3. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏®‡∏£ (Dropdown Arrow) ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏≠‡∏á */
                bg-no-repeat
                bg-right
                pr-8 /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏®‡∏£ */
                bg-[url('data:image/svg+xml,%3csvg%20xmlns%3d%22http%3a//www.w3.org/2000/svg%22%20fill%3d%22none%22%20viewBox%3d%220%200%2020%2020%22%3e%3cpath%20stroke%3d%22%236b7280%22%20stroke-linecap%3d%22round%22%20stroke-linejoin%3d%22round%22%20stroke-width%3d%221.5%22%20d%3d%22m6%208%204%204%204-4%22/%3e%3c/svg%3e')]
                "
              >
                {ageOptions.map(ageValue => ( <option key={ageValue} value={ageValue}>{ageValue} ‡∏õ‡∏µ</option> ))}
              </select>
            </div>
            {/* ‡πÄ‡∏û‡∏® */}
            <div className="min-w-[150px]">
               <div className="flex items-center gap-1.5 mb-1">
                 <FaVenusMars className="text-blue-700 text-sm flex-shrink-0" />
                 <label className="text-xs font-medium text-gray-700">‡πÄ‡∏û‡∏®</label>
               </div>
              <div className="flex gap-3 items-center h-9">
                <label className="inline-flex items-center cursor-pointer">
                  <input type="radio" className="form-radio accent-blue-700 w-4 h-4" name="gender" value="male" checked={gender === 'male'} onChange={() => setGender('male')} />
                  <span className={`ml-1 text-xs ${ gender === 'male' ? 'text-blue-700 font-semibold' : 'text-gray-700' }`}>‡∏ä‡∏≤‡∏¢</span>
                </label>
                <label className="inline-flex items-center cursor-pointer">
                  <input type="radio" className="form-radio accent-pink-500 w-4 h-4" name="gender" value="female" checked={gender === 'female'} onChange={() => setGender('female')} />
                  <span className={`ml-1 text-xs ${ gender === 'female' ? 'text-pink-500 font-semibold' : 'text-gray-700' }`}>‡∏´‡∏ç‡∏¥‡∏á</span>
                </label>
              </div>
            </div>
        </div>

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 2: ‡∏á‡∏ß‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞ */}
        <div className="w-full justify-self-start md:justify-self-start"> {/* ‡∏õ‡∏£‡∏±‡∏ö justify */}
          <label className="block mb-1 text-xs font-medium text-gray-700">‡∏á‡∏ß‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞</label>
          <div className="flex border border-gray-500 rounded overflow-hidden w-full h-6">
            {(['monthly', 'semi-annual', 'annual'] as const).map((freq, index) => (
              <button key={freq} type="button" onClick={() => setPaymentFrequency(freq)}
                className={`flex-1 px-3 py-1 text-xs text-center focus:outline-none ${ // ‡πÄ‡∏û‡∏¥‡πà‡∏° text-center
                  paymentFrequency === freq ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'
                } ${index > 0 ? 'border-l border-gray-500' : ''}`}
              >
                {freq === 'annual' ? '‡∏£‡∏≤‡∏¢‡∏õ‡∏µ' : freq === 'semi-annual' ? '‡∏£‡∏≤‡∏¢ 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô' : '‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'}
              </button>
            ))}
          </div>
        </div>

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 3: Slider ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô RPP/RTU */}
        <div className="w-full self-center md:justify-self-end pt-1"> {/* ‡∏õ‡∏£‡∏±‡∏ö justify/align */}
           <RppRtuRatioSlider
               rppPercent={rppPercentForSlider}
               totalPremium={totalPremiumForSlider}
               onPercentChange={handlePercentChange} // ‡πÉ‡∏ä‡πâ Handler ‡∏à‡∏≤‡∏Å Context
               compact={false} // ‡πÉ‡∏ä‡πâ compact mode
           />
        </div>

      </div>
      {/* === ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.1 === */}


      {/* === ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.2: Layout 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (RPP | RTU | ‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏ß‡∏°) === */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1: ‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ RPP */}
        <div className="bg-blue-50 p-3 rounded flex flex-col items-center gap-1.5"> {/* ‡∏õ‡∏£‡∏±‡∏ö gap */}
          <label className="block text-center text-sm font-medium text-gray-800">‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å (RPP)</label>
          <InputFieldGroup label="" value={rpp} step={10000} onChange={setRpp} inputBgColor="bg-blue-50" compact/> {/* ‡∏™‡πà‡∏á compact */}
          <p className="text-[11px] text-gray-500 text-center pt-0.5">‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ 18,000 ‡∏ö‡∏≤‡∏ó</p> {/* ‡∏õ‡∏£‡∏±‡∏ö font/pt */}
        </div>

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 2: ‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ RTU */}
        <div className="bg-blue-50 p-3 rounded flex flex-col items-center gap-1.5"> {/* ‡∏õ‡∏£‡∏±‡∏ö gap */}
          <label className="block text-center text-sm font-medium text-gray-800">‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏•‡∏á‡∏ó‡∏∏‡∏ô (RTU)</label>
          <InputFieldGroup label="" value={rtu} step={10000} onChange={setRtu} inputBgColor="bg-blue-50" compact/> {/* ‡∏™‡πà‡∏á compact */}
          <p className="text-[11px] text-gray-500 text-center pt-0.5"> {/* ‡∏õ‡∏£‡∏±‡∏ö font/pt */}
            ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô {maxRtu.toLocaleString('en-US')} ‡∏ö‡∏≤‡∏ó
          </p>
        </div>

        {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 3: ‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏ß‡∏° */}
        <div className="bg-blue-50 p-3 rounded flex flex-col justify-center items-center">
          <div>
            <label className="block text-center text-sm font-medium text-gray-800">‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏£‡∏ß‡∏°</label>
            <div className="text-lg font-semibold text-blue-800 mt-1 py-1 text-center"> {/* ‡∏õ‡∏£‡∏±‡∏ö font */}
              {totalPremium.toLocaleString('en-US')} ‡∏ö‡∏≤‡∏ó
            </div>
          </div>
        </div>

      </div>
      {/* === ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.2 === */}


      {/* === ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.3: ‡∏ó‡∏∏‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï === */}
      <div className="flex justify-end pt-4"> {/* ‡πÉ‡∏ä‡πâ pt ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô */}
         <div className="w-full md:w-auto md:max-w-sm lg:max-w-md space-y-2"> {/* ‡πÉ‡∏ä‡πâ space ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô */}

             {/* ‡πÅ‡∏ñ‡∏ß ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
             <div className="flex items-center justify-between bg-white p-2 rounded border border-gray-200 shadow-sm gap-3">
                <label htmlFor="sum-insured-input" className="text-xs font-medium text-gray-700 whitespace-nowrap">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
                </label>
                 <div className="flex items-center gap-1 w-auto">
                    <InputFieldGroup
                       inputId="sum-insured-input"
                       value={sumInsured} // ‡πÉ‡∏ä‡πâ State ‡∏à‡∏≤‡∏Å Context
                       step={100000}
                       onChange={setSumInsured} // ‡πÉ‡∏ä‡πâ Setter ‡∏à‡∏≤‡∏Å Context
                       label=""
                       inputBgColor="bg-white"
                       compact // <<< ‡∏™‡πà‡∏á prop compact
                    />
                 </div>
             </div>

             {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏î‡∏ó‡∏∏‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
             {latestReduction && (
                  <div className="text-right pr-2">
                     <p className="text-xs text-orange-600"> {/* ‡πÉ‡∏ä‡πâ text-xs */}
                         (‡∏•‡∏î‡∏ó‡∏∏‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {latestReduction.amount.toLocaleString('en-US')} ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏¢‡∏∏ {latestReduction.age} ‡∏õ‡∏µ)
                     </p>
                  </div>
             )}

             {/* ‡πÅ‡∏ñ‡∏ß ‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï */}
             <div className="flex items-center justify-between bg-white p-2 rounded border border-gray-200 shadow-sm gap-3">
                 <label id="life-coverage-label" className="text-xs font-medium text-gray-700 whitespace-nowrap">
                    ‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
                 </label>
                 <div className="w-auto text-right">
                     <div className="text-md text-green-700" aria-labelledby="life-coverage-label"> {/* ‡πÉ‡∏ä‡πâ text-xs */}
                         <span className="font-semibold">{lifeCoverage.toLocaleString('en-US')}</span>
                         <span className="ml-3 font-normal">‡∏ö‡∏≤‡∏ó</span>
                     </div>
                 </div>
             </div>

         </div>
      </div>
      {/* === ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.3 === */}


      {/* === ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.4: ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì === */}
      {/*<div className="flex justify-end pt-4"> 
                onClick={() => {
                  console.log("FormInputSection: 'Calculate' button clicked."); // Log ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏´‡∏°
                  if (typeof handleCalculate === 'function') {
                      console.log("FormInputSection: Calling handleCalculate from context...");
                      handleCalculate();
                  } else {
                      console.error("FormInputSection: handleCalculate from context is undefined or not a function!", handleCalculate);
                  }
              }}
        
        
        >‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</Button> 
      </div>*/}
      {/* === ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5.4 === */}

       {/* --- ‡πÑ‡∏°‡πà‡∏°‡∏µ Modal Render ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà --- */}

    </div> // ‡∏õ‡∏¥‡∏î div Container ‡∏´‡∏•‡∏±‡∏Å
  );
}
// --- ‡∏à‡∏ö ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5 ---