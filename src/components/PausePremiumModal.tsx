// src/components/modals/PausePremiumModal.tsx

import { useState, useMemo, useEffect, useCallback } from 'react';
import { v4 as uuidv4 } from 'uuid';

// Store & Types
import { useAppStore } from '@/stores/appStore';
import type { PausePeriodRecord } from '@/lib/calculations';

// UI Components
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from "@/components/ui/dialog";
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from "@/components/ui/alert-dialog";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Label } from "@/components/ui/label";
// +++ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô AlertTriangle ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
import { CalendarClock, PlusCircle, Trash2, ClipboardList, AlertTriangle } from 'lucide-react';

// Helper function
const ageToPolicyYear = (age: number, entryAge: number) => Math.max(1, age - entryAge + 1);

// --- Sub-component: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ (‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) ---
function PausePeriodItem({ record, onDelete }: { record: PausePeriodRecord, onDelete: (id: string | undefined) => void; }) {
  const iWealthyAge = useAppStore.getState().iWealthyAge;

  // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏° isAutoAdjusted
  const ageColor = record.isAutoAdjusted ? 'text-orange-600' : 'text-indigo-600';

  // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏ï‡∏≤‡∏° isAutoAdjusted
  const descriptionText = record.isAutoAdjusted
    ? '(‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)'
    : `(‡∏õ‡∏µ‡∏ó‡∏µ‡πà ${ageToPolicyYear(record.startAge, iWealthyAge)} ‡∏ñ‡∏∂‡∏á ${ageToPolicyYear(record.endAge, iWealthyAge)})`;

  return (
    <div className="flex items-center justify-between p-2.5 bg-zinc-50 border rounded-lg hover:bg-zinc-100 transition-colors">
      <div className="flex items-center gap-3">
        <CalendarClock className="w-5 h-5 text-indigo-500" />
        <div>
          <p className="font-medium text-sm text-zinc-800">
            ‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ <span className={ageColor}>{record.startAge} - {record.endAge}</span> ‡∏õ‡∏µ
          </p>
          <p className="text-xs text-zinc-500">
            {descriptionText}
          </p>
        </div>
      </div>
      {record.id && (
        <Button variant="ghost" size="icon" className="h-8 w-8 text-red-500 hover:text-red-700 hover:bg-red-50" onClick={() => onDelete(record.id)}>
          <Trash2 className="h-4 w-4" />
        </Button>
      )}
    </div>
  );
}

export default function PausePremiumModal() {
  const {
    isPauseModalOpen, closePauseModal, iWealthyPausePeriods, iWealthyAge, setIWealthyPausePeriods,
  } = useAppStore();

  const maxPossibleAge = 98;

  // --- Local State & Memos (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á) ---
  const [plannedPauses, setPlannedPauses] = useState<PausePeriodRecord[]>([]);
  const [itemToDeleteId, setItemToDeleteId] = useState<string | null>(null);
  const [startAge, setStartAge] = useState<number>(iWealthyAge + 1);
  const [endAge, setEndAge] = useState<number>(maxPossibleAge);
  const nextAvailableStartAge = useMemo(() => plannedPauses.length === 0 ? iWealthyAge + 1 : Math.max(...plannedPauses.map(p => p.endAge)) + 1, [plannedPauses, iWealthyAge]);
  const canAddNewPeriod = useMemo(() => nextAvailableStartAge < maxPossibleAge, [nextAvailableStartAge, maxPossibleAge]);
  const isFormValid = useMemo(() => startAge < endAge, [startAge, endAge]);
  const startOptions = useMemo(() => canAddNewPeriod ? Array.from({ length: maxPossibleAge - nextAvailableStartAge }, (_, i) => nextAvailableStartAge + i) : [], [canAddNewPeriod, nextAvailableStartAge, maxPossibleAge]);
  const endOptions = useMemo(() => canAddNewPeriod ? Array.from({ length: maxPossibleAge - (startAge + 1) + 1 }, (_, i) => startAge + 1 + i) : [], [canAddNewPeriod, startAge, maxPossibleAge]);

  // --- Effects & Handlers (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á) ---
  useEffect(() => {
¬† ¬† if (isPauseModalOpen) {

      console.log("[PausePremiumModal] üîé Modal ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô");
      console.log("[PausePremiumModal] ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Store (iWealthyPausePeriods):", iWealthyPausePeriods);

¬† ¬† ¬† const sortedPlan = [...iWealthyPausePeriods].sort((a, b) => a.startAge - b.startAge);
¬† ¬† ¬† setPlannedPauses(sortedPlan);

      console.log("[PausePremiumModal] ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Local State (plannedPauses):", sortedPlan);

¬† ¬† ¬† const nextStart = sortedPlan.length > 0 ? Math.max(...sortedPlan.map(p => p.endAge)) + 1 : iWealthyAge + 1;
¬† ¬† ¬† setStartAge(Math.min(nextStart, maxPossibleAge));
¬† ¬† ¬† setEndAge(maxPossibleAge);
¬† ¬† }
¬† }, [isPauseModalOpen, iWealthyPausePeriods, iWealthyAge, maxPossibleAge]);


  const handleStartAgeChange = (value: string) => {
    const newStartAge = parseInt(value, 10);
    setStartAge(newStartAge);
    if (endAge <= newStartAge) setEndAge(Math.min(newStartAge + 1, maxPossibleAge));
  };
  const handleEndAgeChange = (value: string) => setEndAge(parseInt(value, 10));
  const handleAddPeriod = useCallback(() => {
    if (!isFormValid) return;
    const newPause: PausePeriodRecord = { id: uuidv4(), startAge, endAge, type: 'age', isAutoAdjusted: false };
    const updatedPauses = [...plannedPauses, newPause].sort((a, b) => a.startAge - b.startAge);
    setPlannedPauses(updatedPauses);
    const nextStart = endAge + 1;
    setStartAge(Math.min(nextStart, maxPossibleAge));
    setEndAge(maxPossibleAge);
  }, [startAge, endAge, plannedPauses, isFormValid, maxPossibleAge]);
  const confirmDelete = useCallback(() => {
    if (!itemToDeleteId) return;
    const updatedPauses = plannedPauses.filter(p => p.id !== itemToDeleteId);
    setPlannedPauses(updatedPauses);
    const nextStart = updatedPauses.length > 0 ? Math.max(...updatedPauses.map(p => p.endAge)) + 1 : iWealthyAge + 1;
    setStartAge(Math.min(nextStart, maxPossibleAge));
    setEndAge(maxPossibleAge);
    setItemToDeleteId(null);
  }, [itemToDeleteId, plannedPauses, iWealthyAge, maxPossibleAge]);
  const handleSavePlan = () => {
    console.log("[PausePremiumModal] üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ú‡∏ô...");
    console.log("[PausePremiumModal] ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ Store:", plannedPauses);
    setIWealthyPausePeriods(plannedPauses);
    closePauseModal();
  };

  return (
    <>
      <Dialog open={isPauseModalOpen} onOpenChange={(open) => !open && closePauseModal()}>
        {/* +++ ‡∏õ‡∏£‡∏±‡∏ö max-w ‡πÅ‡∏•‡∏∞‡∏•‡∏î p-0 ‡∏≠‡∏≠‡∏Å ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏≠‡∏á +++ */}
        <DialogContent className="sm:max-w-3xl grid grid-rows-[auto,1fr,auto] max-h-[90vh] rounded-2xl overflow-hidden border-2 border-slate-200">
          
          {/* +++ ‡∏•‡∏î Padding ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î Font +++ */}
          <DialogHeader className="p-4 bg-slate-50 border-b">
            <DialogTitle className="flex items-center text-lg font-bold text-slate-800">
              <CalendarClock className="mr-2 h-5 w-5 text-indigo-500" />
              ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢
            </DialogTitle>
          </DialogHeader>

          {iWealthyPausePeriods.some(p => p.isAutoAdjusted) && (
            <div className="!mt-3 flex items-start gap-2.5 p-3 text-amber-900 bg-amber-100/60 rounded-lg border border-amber-200/80">
              <AlertTriangle className="h-4 w-4 mt-0.5 flex-shrink-0 text-amber-500" />
              <p className="text-xs">
                ‡πÅ‡∏ú‡∏ô‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
              </p>
            </div>
          )}

          {/* +++ ‡∏•‡∏î Padding ‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Grid +++ */}
          <div className="overflow-y-auto p-4 grid grid-cols-1 lg:grid-cols-2 gap-x-6 bg-slate-100/50">
            {/* --- ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ã‡πâ‡∏≤‡∏¢: ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ --- */}
            <div className="space-y-3">
              <h3 className="font-semibold text-base text-slate-800 flex items-center gap-2"><PlusCircle className="h-5 w-5 text-indigo-600"/>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</h3>
              <div className="p-4 bg-white border rounded-xl space-y-4 shadow-md shadow-slate-200/50">
                {/* +++ ‡∏´‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏° Select ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢ Grid +++ */}
                <div className="grid grid-cols-2 gap-x-3">
                  <div className="space-y-1.5">
                    <Label htmlFor="start-age" className="text-sm font-normal text-slate-600">1. ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏¢‡∏∏</Label>
                    <Select onValueChange={handleStartAgeChange} value={startAge.toString()} disabled={!canAddNewPeriod}>
                      <SelectTrigger id="start-age" className="h-10 text-xs"><SelectValue /></SelectTrigger>
                      <SelectContent>
                        {startOptions.map(age => (
                          <SelectItem key={age} value={age.toString()} className="text-sm">
                            ‡∏≠‡∏≤‡∏¢‡∏∏ {age} ‡∏õ‡∏µ (‡∏õ‡∏µ‡∏ó‡∏µ‡πà {age - iWealthyAge + 1})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                  <div className="space-y-1.5">
                    <Label htmlFor="end-age" className="text-sm font-normal text-slate-600">2. ‡∏ñ‡∏∂‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</Label>
                    <Select onValueChange={handleEndAgeChange} value={endAge.toString()} disabled={!canAddNewPeriod}>
                      <SelectTrigger id="end-age" className="h-10 text-xs"><SelectValue /></SelectTrigger>
                      <SelectContent>
                        {endOptions.map(age => (
                          <SelectItem key={age} value={age.toString()} className="text-sm">
                            ‡∏≠‡∏≤‡∏¢‡∏∏ {age} ‡∏õ‡∏µ (‡∏õ‡∏µ‡∏ó‡∏µ‡πà {age - iWealthyAge + 1})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>
                <Button onClick={handleAddPeriod} disabled={!canAddNewPeriod || !isFormValid} className="w-full h-10 text-base bg-indigo-600 hover:bg-indigo-700 text-white font-semibold">
                  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                </Button>
              </div>

              {/* +++ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô +++ */}
              <div className="!mt-4 flex items-start gap-2.5 p-3 text-amber-900 bg-amber-100/60 rounded-lg border border-amber-200/80">
                <AlertTriangle className="h-4 w-4 mt-0.5 flex-shrink-0 text-amber-500" />
                <p className="text-xs">
                  <strong>‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</strong> ‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÉ‡∏ô‡∏õ‡∏µ‡πÉ‡∏î‡πÜ ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô Bonus ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô
                </p>
              </div>
            </div>

            {/* --- ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏ß‡πâ --- */}
            <div className="space-y-3 lg:border-l lg:pl-6">
              <h3 className="font-semibold text-base text-slate-800">‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢</h3>
              {plannedPauses.length === 0 ? (
                <div className="flex flex-col items-center justify-center text-center text-slate-400 h-full pt-8">
                  <ClipboardList className="h-16 w-16 text-slate-300" />
                  <p className="mt-2 font-medium text-sm text-slate-500">‡πÅ‡∏ú‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà</p>
                  <p className="text-xs">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢</p>
                </div>
              ) : (
                <div className="space-y-2">
                  {plannedPauses.map(record => (
                    <PausePeriodItem key={record.id || record.startAge} record={record} onDelete={() => setItemToDeleteId(record.id ?? null)} />
                  ))}
                </div>
              )}
            </div>
          </div>
          
          {/* +++ ‡∏•‡∏î Padding ‡∏Ç‡∏≠‡∏á Footer +++ */}
          <DialogFooter className="p-4 bg-slate-100 border-t">
            <Button type="button" variant="ghost" onClick={closePauseModal}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Button>
            <Button type="button" onClick={handleSavePlan} className="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold">
              ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ú‡∏ô
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
      
      <AlertDialog open={!!itemToDeleteId} onOpenChange={() => setItemToDeleteId(null)}>
        <AlertDialogContent>
          <AlertDialogHeader>
            <AlertDialogTitle>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</AlertDialogTitle>
            <AlertDialogDescription>
              ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogCancel>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</AlertDialogCancel>
            <AlertDialogAction onClick={confirmDelete} className="bg-red-600 hover:bg-red-700">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </>
  );
}